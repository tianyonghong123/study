//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by Fernflower decompiler)
//

package com.samskivert.util;

import com.samskivert.Log;
import java.awt.event.InputEvent;

public class RunAnywhere {
    protected static boolean _isWindows;
    protected static boolean _isMacOS;
    protected static boolean _isLinux;
    protected static long _lastStamp;
    protected static long _lastWarning;

    public RunAnywhere() {
    }

    public static final boolean isWindows() {
        return _isWindows;
    }

    public static final boolean isMacOS() {
        return _isMacOS;
    }

    public static final boolean isLinux() {
        return _isLinux;
    }

    public static final long currentTimeMillis() {
        long stamp = System.currentTimeMillis();
        if (stamp < _lastStamp) {
            if (stamp > _lastWarning) {
                Log.log.warning("Someone call Einstein! The clock is running backwards", new Object[]{"dt", stamp - _lastStamp});
                _lastWarning = _lastStamp;
            }

            stamp = _lastStamp;
        }

        _lastStamp = stamp;
        return stamp;
    }

    public static long getWhen(InputEvent event) {
        return !isWindows() && !isMacOS() ? event.getWhen() : currentTimeMillis();
    }

    static {
        try {
            String osname = System.getProperty("os.name");
            osname = osname == null ? "" : osname;
            _isWindows = osname.indexOf("Windows") != -1;
            _isMacOS = osname.indexOf("Mac OS") != -1 || osname.indexOf("MacOS") != -1;
            _isLinux = osname.indexOf("Linux") != -1;
        } catch (Exception var1) {
            ;
        }

    }
}
